import numpy as np

  def gaussiana(A, b):

    
      Ab = np.hstack([A, b])
      n = len(b)

      # Eliminacion hacia adelante
      for i in range(n):
          if Ab[i, i] == 0:
              for k in range(i + 1, n):
                  if Ab[k, i] != 0:
                      Ab[[i, k]] = Ab[[k, i]]
                      break
              else:
                  raise ValueError("No hay solución única")

          # Normaliza la fila del pivote
          pivote = Ab[i, i]
          Ab[i] = Ab[i] / pivote

          # Eliminamos las entradas que estan abajo del pivote
          for j in range(i + 1, n):
              Ab[j] = Ab[j] - Ab[j, i] * Ab[i]

      # Eliminación hacia atrás
      x = np.zeros(n)
      for i in range(n - 1, -1, -1):
          x[i] = Ab[i, -1] - np.sum(Ab[i, i + 1:n] * x[i + 1:n])

      return x

  sol = gaussiana([[2,4,-2],[4,9,-3],[-2,-1,7]],[[4],[8],[-6]])
  print(sol)
